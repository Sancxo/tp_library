<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bibliothèque</title>
  <link rel="stylesheet" href="/stylesheets/form.css">
  <link rel="stylesheet" href="/stylesheets/style.css">
</head>

<body>
  <header>
    <h1>Ajouter ou modifier</h1>
    <a href="/logout">Se déconnecter</a>
    <a href="/index">Retour</a>
  </header>
  <div class="grid">
    <div class="grid-element">

      <h3>Ajouter genre</h3>
      <p class="success"><%=(typeof successGenre != 'undefined' ) ? successGenre : '' %></p>
      <p class="error"><%=(typeof errorGenre != 'undefined' ) ? errorGenre : '' %></p>

      <form action="/api/genres" method="post">

        <div class="group-form">
          <label for="libelle">Libelle</label>
          <input type="text" name="libelle" id="">
        </div>

        <div class="group-form">
          <label for="description">Description</label>
          <input type="text" name="description" id="">
        </div>
        <button type="submit">Envoyer</button>
      </form>
    </div>

    <div class="grid-element">

      <h3>Ajouter auteur</h3>
      <p class="success"><%=(typeof successAuteur != 'undefined' ) ? successAuteur : '' %></p>
      <p class="error"><%=(typeof errorAuteur != 'undefined' ) ? errorAuteur : '' %></p>

      <form action="/api/auteurs" method="post">

        <div class="group-form">
          <label for="name">Nom</label>
          <input type="text" name="name" id="">
        </div>

        <div class="group-form">
          <label for="firstname">Prénom</label>
          <input type="text" name="firstname" id="">
        </div>
        <button type="submit">Envoyer</button>
      </form>
    </div>

    <div class="grid-element">

      <h3>Ajouter livre</h3>
      <!-- si la variable existe elle s'affiche -->
      <p class="success"><%=(typeof successLivre != 'undefined' ) ? successLivre : '' %></p>
      <p class="error"><%=(typeof errorLivre != 'undefined' ) ? errorLivre : '' %></p>
      <form action="/api/livres" method="post">

        <div class="group-form">
          <label for="title">Titre</label>
          <input type="text" name="title" id="">
        </div>

        <div class="group-form">
          <label for="description">Description</label>
          <input type="text" name="description" id="">
        </div>
        <div class="group-form author">
          <div class="group-form--spe">
            <label for="author">Auteur(s)</label>
            <p id="addAuthor" class="btn-add">ajouter</p>
          </div>
          <select name="author1" class="author"></select>
        </div>
        <div class="group-form genre">
          <div class="group-form--spe">
            <label for="genre">Genre(s)</label>
            <p id="addGenre" class="btn-add">ajouter</p>
          </div>
          <select name="genre1" class="genre"></select>
        </div>
        <div class="group-form">
          <label for="image">Image - disabled</label>
          <input type="text" name="image" disabled>
        </div>
        <button type="submit">Envoyer</button>
      </form>
    </div>

    <div class="grid-element">

      <h3>Supprimer un livre</h3>
      <p class="success"><%=(typeof successDeleteLivre != 'undefined' ) ? successDeleteLivre : '' %></p>
      <p class="error"><%=(typeof errorDeleteLivre != 'undefined' ) ? errorDeleteLivre : '' %></p>

      <form action="deleteLivre()" method="GET">
        <div class="group-form livres">
          <label for="id">Livres</label>
          <select name="id" class="livres"></select>
        </div>

        <input type="button" value="Supprimer">
      </form>

    </div>

  </div>
</body>
<script>
  async function getList(property) {
    const response = await fetch(`http://localhost:3000/api/${property}/all`);
    const result = await response.json();
    return result;
  }

  function addSelect(property) {
    let helper = '',
      numLastSelect = 0;
    let groupForm = document.querySelector(`.group-form.${property}`);
    let select = document.createElement("select");

    numLastSelect = groupForm.lastElementChild.name.match(/\d$/)[0]; // !! Gives back an array

    if (numLastSelect == 3) return; // we make sure only 3 authors can be in the list

    numLastSelect++;
    select.classList.add(property);
    select.name = `${property}${numLastSelect}`;


    if(property === "author") {
      helper = "auteurs";
    } else if (property === "genre") {
      helper = "genres";
    } else {
      helper = "livres";
    }

    getList(helper)
      .then(items => {
        items.forEach(item => {
          let fullName = "",
            textNode = "";
          let option = document.createElement("option");

          if (property === "author") {
            fullName = `${item.id_auteur}. ${item.prenom} ${item.nom}`
          } else if (property === "genre") {
            fullName = `${item.id_genre}. ${item.libelle}`;
          } else {
            fullName = `${item.id_livres}. ${item.titre}`;
          }

          textNode = document.createTextNode(fullName);
          option.append(textNode);
          select.append(option);

        })
      });

    groupForm.appendChild(select);
  }

  let selectAuthor = document.querySelector("select.author");
  let selectGenre = document.querySelector("select.genre");
  let selectLivres = document.querySelector("select.livres"); 

  document.getElementById("addAuthor").addEventListener("click", () => {
    addSelect("author");
  });
  document.getElementById("addGenre").addEventListener("click", () => {
    addSelect("genre");
  });


  getList("auteurs")
  .then(authors => {
    authors.forEach(author => {
      let fullName = `${author.id_auteur}. ${author.prenom} ${author.nom}`;
      let option = document.createElement("option");
      let textNode = document.createTextNode(fullName);

      option.append(textNode);
      selectAuthor.append(option);
    })
  })

  getList("genres")
  .then(genres => {
    genres.forEach(genre => {
      let fullName = `${genre.id_genre}. ${genre.libelle}`;
      let option = document.createElement("option");
      let textNode = document.createTextNode(fullName);

      option.append(textNode);
      selectGenre.append(option);
    })
  })

  getList("livres")
.then(livres => {
  livres.forEach(livre => {
    let fullName = `${livre.id_livres}. ${livre.titre}`;
    let option = document.createElement("option");
    let textNode = document.createTextNode(fullName);

    option.append(textNode);
    selectLivres.append(option);
  });
})

deleteLivre = () => {
  let id = `${livres.id_livres}`;
  var request = new XMLHttpRequest();
  request.open("DELETE", 'localhost:3000/api/livres/' + id);
  request.send('Book deleted');
}
</script>

</html>